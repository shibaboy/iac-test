AWSTemplateFormatVersion: "2010-09-09"
Description: Main stack for IaC

Parameters:
  AvailabilityZones:
    #Type: List<AWS::EC2::AvailabilityZone::Name>
    Type: CommaDelimitedList
    Description: The list of Availability Zones to use for the subnets in the VPC. Select 2 AZs.
    Default: 'ap-southeast-2a,ap-southeast-2b,ap-southeast-2c'

  VPCName:
    Type: String
    Description: The name of the VPC.
    Default: cfn-workshop-vpc

  VPCCidr:
    Type: String
    Description: The CIDR block for the VPC.
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
    Default: 10.0.0.0/16

  PublicSubnet1Cidr:
    Type: String
    Description: The CIDR block for the public subnet located in Availability Zone 1.
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
    Default: 10.0.0.0/24

  PublicSubnet2Cidr:
    Type: String
    Description: The CIDR block for the public subnet located in Availability Zone 2.
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
    Default: 10.0.1.0/24

  Environment:
    Type: String
    Description: Environment info - Stage or Prod
    AllowedValues: 
      - Development
      - Stage
      - Production
    Default: Stage

Conditions:
  IsSTG: !Equals [ !Ref Environment, 'Stage' ]
  IsPRD: !Equals [ !Ref Environment, 'Production' ]

Mappings:
  StageParameters:
    Name:
      VPCName: STG-VPC
  ProductionParameters:
    Name:
      VPCName: PRD-VPC

Resources:
  VpcStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: ./templates/vpc.yml
      TimeoutInMinutes: 20
      Parameters:
        AvailabilityZones:
          Fn::Join:
            - ','
            - !Ref AvailabilityZones
        VPCCidr: !Ref VPCCidr
        VPCName: !If
          - IsSTG:
          - !FindInMap [StageParameters, Name, VPCName]
          - !FindInMap [ProductionParameters, Name, VPCName]
        PublicSubnet1Cidr: !Ref PublicSubnet1Cidr
        PublicSubnet2Cidr: !Ref PublicSubnet2Cidr

  LambdaBasicExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Path: /
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole

  PythonFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: cfn-workshop-python-function
      Description: Python Function to return specific TimeZone time
      Runtime: python3.8
      Role: !GetAtt LambdaBasicExecutionRole.Arn
      Handler: lambda_function.handler
      Code: ./lambda/    
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W89
            reason: "testing. non vpc lambda is okay for now."
          - id: W92
            reason: "testing. non vpc lambda is okay for now."
      
Outputs:
  LambdaFunction:
    Description: AWS Lambda Python Function
    Value: !Ref PythonFunction
